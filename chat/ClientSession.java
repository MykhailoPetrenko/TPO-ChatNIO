package chat;import java.io.IOException;import java.nio.ByteBuffer;import java.nio.CharBuffer;import java.nio.channels.SocketChannel;import java.nio.charset.Charset;public class ClientSession {    private static Charset charset = Charset.forName("ISO-8859-2");    private static final int BSIZE = 1024;    public static String read(SocketChannel cc) {        ByteBuffer bbuf = ByteBuffer.allocate(BSIZE);        StringBuffer reqString = new StringBuffer();        if(!cc.isOpen()) return "";        try{            readLoop:            while(true){                int n =cc.read(bbuf);                if(n>0){                    bbuf.flip();                    CharBuffer cbuf = charset.decode(bbuf);                    while(cbuf.hasRemaining()){                        char c = cbuf.get();                        if(c =='\r' || c== '\n') break readLoop;                        reqString.append(c);                    }                }else break readLoop;            }        } catch (IOException e) {            e.printStackTrace();        }        return reqString.toString();    }    public static void write(String message, SocketChannel channel) {        try {            ByteBuffer buf = charset.encode(message);            while(buf.hasRemaining())                channel.write(buf);        } catch (IOException e) {            e.printStackTrace();        }    }}